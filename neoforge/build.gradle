plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle' version '[6.0.18,6.2)'
    id 'org.spongepowered.mixin'
}

base {
    archivesName = "${mod_archives_name}-neoforge-${minecraft_version}-${mod_version}"
}

repositories {
    maven { url 'https://www.cursemaven.com' }
}

minecraft {
    mappings channel: 'official', version: minecraft_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    copyIdeResources = true
    runs {
        configureEach {
            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'
            property 'mixin.env.disableRefMap', 'true'
            singleInstance true
            ideaModule "${rootProject.name}.${project.name}.main"
            args "-mixin.config=${mod_id}-common.mixins.json"
            args "-mixin.config=${mod_id}-neoforge.mixins.json"
            mods {
                "${mod_id}" {
                    source sourceSets.main
                    source project(':common').sourceSets.main
                }
            }
        }

        client {
            workingDirectory project.file('runs/client')
            taskName 'client'
        }

        clientAlt {
            parent minecraft.runs.client
            workingDirectory project.file('runs/client2')
            taskName 'client2'
            args '--username', 'Dev2'
        }

        server {
            workingDirectory project.file('runs/server')
            taskName 'server'
        }
    }
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}

dependencies {
    minecraft "net.neoforged:forge:${neoforge_version}"
    compileOnly project(':common')
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.withType(JavaCompile).configureEach {
    options.setEncoding('UTF-8')
    options.release.set(17)
    source(project(':common').sourceSets.main.allSource)
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : mod_authors,
                "Specification-Version"   : '4',
                "Implementation-Title"    : mod_display_name,
                "Implementation-Version"  : mod_version,
                "Implementation-Vendor"   : mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}-common.mixins.json"
    config "${mod_id}-neoforge.mixins.json"
}

processResources {
    from project(':common').sourceSets.main.resources
    filesMatching('META-INF/mods.toml') {
        expand project.properties
    }
    outputs.upToDateWhen {
        false
    }
}